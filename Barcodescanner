package P1;

import java.awt.EventQueue;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

import com.google.zxing.BinaryBitmap;
import com.google.zxing.EncodeHintType;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;


public class Project {

	private JFrame frame;
	private JTextField t1;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args)throws WriterException, IOException, NotFoundException   {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Project window = new Project();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Project() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 980, 522);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JButton b1 = new JButton("Select File");
		b1.setFont(new Font("Tahoma", Font.BOLD, 18));
		b1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) 
			{
				JFileChooser Jfile= new JFileChooser();
				Jfile.showOpenDialog(b1);
				File file2;
		              file2 = Jfile.getSelectedFile();
		              file2.getName();
		              String filepath=file2.getAbsolutePath();
					//picture path is filepath
		              JLabel pic1 = new JLabel("");
		      		pic1.setBounds(534, 67, 296, 298);
		      		frame.getContentPane().add(pic1);
		              //ImageIcon i = new ImageIcon(filepath);
		              //pic1.setIcon(i);
		      		String Imgpath=filepath;
		    		ImageIcon ImgIcon=new ImageIcon(Imgpath);
		    		Image Img=ImgIcon.getImage(); 
		    		Image ImgScale=Img.getScaledInstance(pic1.getWidth(), pic1.getHeight(), Image.SCALE_SMOOTH);
		    		ImageIcon Scaled=new ImageIcon(ImgScale);
		    		pic1.setIcon(Scaled);
				String path = filepath;   
				String charset = "UTF-8";  
				Map<EncodeHintType, ErrorCorrectionLevel> hintMap = new HashMap<EncodeHintType, ErrorCorrectionLevel>();    
				hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);  
				try {
					
					t1.setText(readQRcode(path, charset, hintMap));
				} catch (NotFoundException | IOException e1) {
					e1.printStackTrace();
				}  
			}
			});
		b1.setBounds(358, 406, 205, 31);
		frame.getContentPane().add(b1);
		
		t1 = new JTextField();
		t1.setEditable(false);
		t1.setBounds(56, 70, 468, 295);
		frame.getContentPane().add(t1);
		t1.setColumns(10);
		
		JLabel pic1 = new JLabel("");
		pic1.setBounds(534, 67, 296, 298);
		frame.getContentPane().add(pic1);
	}
public static String readQRcode(String path, String charset, Map<EncodeHintType, ErrorCorrectionLevel> map) throws FileNotFoundException, IOException, NotFoundException  
{  
BinaryBitmap binaryBitmap = new BinaryBitmap(new HybridBinarizer(new BufferedImageLuminanceSource(ImageIO.read(new FileInputStream(path)))));  
Result rslt = new MultiFormatReader().decode(binaryBitmap);  
return rslt.getText();  
}        
}
